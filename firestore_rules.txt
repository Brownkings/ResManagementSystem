rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuth() {
      return request.auth != null;
    }
    
    function hasRole(role) {
      return isAuth() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isManager() {
      return hasRole('Manager');
    }
    
    function isChef() {
      return hasRole('Chef');
    }
    
    function isWaiter() {
      return hasRole('Waiter');
    }
    
    match /users/{userId} {
      allow read: if isOwner(userId) || isManager() || isWaiter();
      allow update: if (isOwner(userId) && !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role'])) || isManager();
      allow create, delete: if isManager();
    }
    
    match /menu/{itemId} {
      allow read: if isAuth();
      allow create, update, delete: if isManager();
    }
    
    match /orders/{orderId} {
      allow read: if isAuth() && (resource.data.customerId == request.auth.uid || isWaiter() || isChef() || isManager());
      allow create: if isAuth() && request.resource.data.customerId == request.auth.uid;
      allow update: if isAuth() && (isWaiter() || isManager() || (isChef() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status'])));
      allow delete: if isManager();
    }
    
    match /inventory/{itemId} {
      allow read: if isAuth() && (isChef() || isManager());
      allow create, update, delete: if isManager();
    }
    
    match /reservations/{reservationId} {
      allow read: if isAuth() && (resource.data.customerId == request.auth.uid || isWaiter() || isChef() || isManager());
      allow create: if isAuth() && request.resource.data.customerId == request.auth.uid;
      allow update: if isAuth() && (isWaiter() || isManager());
      allow delete: if isManager();
    }
    
    match /tables/{tableId} {
      allow read: if isAuth();
      allow create, update: if isAuth() && (isWaiter() || isManager());
      allow delete: if isManager();
    }
  }
}